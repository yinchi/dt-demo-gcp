"""Set server default for UUID `id`.

Revision ID: 14dd329ce812
Revises: 25757de76e94
Create Date: 2025-08-15 12:23:39.756864

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# from pydantic_settings import BaseSettings, SettingsConfigDict

# revision identifiers, used by Alembic.
revision: str = "14dd329ce812"
down_revision: Union[str, Sequence[str], None] = "25757de76e94"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "user",
        "id",
        existing_type=sa.UUID(),
        server_default=sa.text("uuid_generate_v4()"),
        existing_nullable=False,
    )
    # ### end Alembic commands ###

    # If desired, add bulk inserts here; example as follows:
    # Insert the initial admin user, reading a PydanticSettings value
    # admin_password = bytes(Settings().admin_password, 'utf-8')
    # op.bulk_insert(
    #     user_table,
    #     [
    #         {
    #             'id': str(uuid.uuid4()),  # Generate a unique UUID
    #             'username': 'admin',
    #             'hashed_password': bcrypt.hashpw(admin_password, bcrypt.gensalt()),
    #         }
    #     ]
    # )


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "user", "id", existing_type=sa.UUID(), server_default=None, existing_nullable=False
    )
    # ### end Alembic commands ###
