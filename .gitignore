# Environments
*.env*
*.env.old*
.envrc
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
!*.env.example

*secret*
!*secret.example*

# Caches
.cache
.cache/

# Temporary files
*.tmp
*.temp
tmp/

# Logs
*.log
*.log.*

## PYTHON
# Copied from https://github.com/github/gitignore/blob/main/Python.gitignore

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[codz]

# Jupyter Notebook
.ipynb_checkpoints

# Quarto
.quarto/
_quarto/

# mkdocs documentation
site/

# Sphinx documentation
docs/_build/

# pytest cache
.pytest_cache/

# Ruff stuff:
.ruff_cache/


## GITHUB PAGES
# Copied from https://github.com/github/gitignore/blob/main/GitHubPages.gitignore

# Basic Jekyll gitignores (synchronize to Jekyll.gitignore)
_site/
.sass-cache/
.jekyll-cache/
.jekyll-metadata

# Additional Ruby/bundler ignore for when you run: bundle install
/vendor

# Specific ignore for GitHub Pages
# GitHub Pages will always use its own deployed version of pages-gem
# This means GitHub Pages will NOT use your Gemfile.lock and therefore it is
# counterproductive to check this file into the repository.
# Details at https://github.com/github/pages-gem/issues/768
Gemfile.lock


## Node.js
# Copied from https://github.com/github/gitignore/blob/main/Node.gitignore

# Logs
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Dependency directories
node_modules/
jspm_packages/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# Optional REPL history
.node_repl_history

# Next.js build output
.next

# Sveltekit cache directory
.svelte-kit/

# yarn v3
.pnp.*
.yarn/*
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/sdks
!.yarn/versions
